<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd

        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <context:annotation-config/>

    <bean id="idUtil" class="com.dstz.base.core.id.IdUtil">
        <property name="idGenerator" ref="idGenerator"></property>
    </bean>
	
    <bean id="idGenerator" class="com.dstz.base.core.id.snowflake.SnowflakeIdGenerator">
       	<constructor-arg>
       		<bean class="com.dstz.base.core.id.snowflake.SnowflakeIdMeta">
       			<constructor-arg name="machine" type="long" value="${id.machineid}" />
       			<constructor-arg name="machineBits" type="byte" value="3"/>
       			<constructor-arg name="sequenceBits" type="byte" value="15"/>
       			<constructor-arg name="timeSequence" type="byte" value="45"/>
       		</bean>
       	</constructor-arg>
    </bean>

     <!-- 系统默认数据源 -->
    <bean id="dataSourceDefault" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"  destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${db.minimumConnectionCount}"/>
        <property name="minIdle" value="${db.minimumConnectionCount}"/>
        <property name="maxActive" value="${db.maximumConnectionCount}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="select * from ACT_GE_PROPERTY"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
        <!-- 连接泄漏监测 -->
        <property name="removeAbandoned" value="true"/> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="28800"/> <!-- 28800秒，也就是8小时，一个连接超过8小时会自动删除这个连接 -->
        <property name="logAbandoned" value="true"/> <!-- 关闭abanded连接时输出错误日志 -->
    </bean>

    <!-- 动态数据源配置 -->
    <bean id="dataSource" class="com.dstz.base.db.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map>
                <entry key="dataSourceDefault" value-ref="dataSourceDefault"/>
            </map>
        </property>
        <property name="defaultDbtype" value="${jdbc.dbType}"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
	        <array>
	            <value>classpath*:com/dstz/*/mapping/*.xml</value>
	            <value>classpath*:com/dstz/*/*/mapping/*.xml</value>
	        </array>
	    </property>
       <property name="plugins">
	        <array>
	            <bean class="com.github.pagehelper.PageInterceptor">
	            	<property name="properties">
	            		<value>
	            			helperDialect=${jdbc.dbType}
                            <!--数据源存在多种时打开  autoRuntimeDialect=true -->
                            rowBoundsWithCount=true
                        </value>
	            	</property>
	            </bean>
	        	<bean class="com.dstz.base.dao.baseinterceptor.QueryInterceptor">  </bean>
	        	<bean class="com.dstz.base.dao.baseinterceptor.SaveInterceptor">  </bean>
	        </array>
	    </property>
	    <property name="databaseIdProvider">
		     <bean class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		          <property name="properties">
		               <props>
		                    <prop key="MySQL">mysql</prop>
		                    <prop key="Oracle">oracle</prop>
		               </props>
		          </property>
		     </bean>
		</property>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dstz.**.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean> 

    <bean id="abSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
</beans>